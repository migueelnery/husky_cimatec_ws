<?xml version="1.0"?>

<launch>

  <param name="use_sim_time" value="true"/>
  <arg name="scan_topic" default="scan" />
  
  <!--- Run gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
    <rosparam>
      odom_frame: odom
      base_frame: base_link
      map_frame: map

      map_update_interval: 0.5 # Publish new map

      maxUrange: 30 # Should be just less than sensor range
      maxRange: 60 # Should be just greater than sensor range
      particles: 40 # Increased from 80

      # Update frequencies
      linearUpdate: 0.1 #0.3
      angularUpdate: 0.1 #0.5
      temporalUpdate: 2.0
      resampleThreshold: 0.5

      # Initial Map Size
      xmin: -200.0
      ymin: -200.0
      xmax: 200.0
      ymax: 200.0
      delta: 0.05

      # All default
      sigma: 0.05
      kernelSize: 1
      lstep: 0.05
      astep: 0.05
      iterations: 5
      lsigma: 0.075
      ogain: 3.0
      lskip: 0 #10
      llsamplerange: 0.01
      llsamplestep: 0.01
      lasamplerange: 0.005
      lasamplestep: 0.005

    </rosparam>
    <remap from="scan" to="$(arg scan_topic)"/>
  </node>


  <!--- Run Move Base -->
  <arg name="no_static_map" default="false"/>
  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find husky_navigation)/config/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find husky_navigation)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find husky_navigation)/config/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find husky_navigation)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find husky_navigation)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find husky_navigation)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
    <remap from="cmd_vel" to ="/cmd_vel_move_base"/>
  </node>

  <!-- <node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
    <param name="robot_base_frame" value="base_link"/>
    <param name="costmap_topic" value="map"/>
    <param name="costmap_updates_topic" value="map_updates"/>
    <param name="visualize" value="true"/>
    <param name="planner_frequency" value="0.33"/> <! #0.33 > 
    <param name="progress_timeout" value="1"/> <! 30 >
    <param name="potential_scale" value="3.0"/> <! 3 >
    <param name="orientation_scale" value="0.0"/> <!0>
    <param name="gain_scale" value="1.0"/> <!1.0>
    <param name="transform_tolerance" value="0.3"/> <!0.3>
    <param name="min_frontier_size" value="5"/> <!0.5>
  </node> -->

  <rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>

  <node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/operator.yaml"/>
		<rosparam file="$(find nav2d_tutorials)/param/costmap.yaml" ns="local_map" />
    <remap from="/cmd_vel" to="/cmd_vel_operator"/>
	</node> 

  <!-- <node name="Mapper" pkg="nav2d_karto" type="mapper">
		<remap from="scan" to="scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/mapper.yaml"/>
	</node> -->

  <node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find nav2d_tutorials)/param/navigator.yaml"/>
	</node>
 


  

  <node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
  <node name="Explore" pkg="nav2d_navigator" type="explore_client" />
  <node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" /> 

</launch>